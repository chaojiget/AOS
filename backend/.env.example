# Server Configuration
PORT=3001
NODE_ENV=development
FRONTEND_URL=http://localhost:3000

# OpenAI Configuration
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_BASE_URL=https://api.openai.com/v1
OPENAI_MODEL=glm-4-5-air
# Database Configuration
DATABASE_URL=postgres://aos:aos@localhost:5432/aos
LANGGRAPH_CHECKPOINT_URL=postgres://aos:aos@localhost:5432/aos
DATABASE_SSL=false

# OpenTelemetry Configuration
OTEL_SERVICE_NAME=aos-chat-backend
OTEL_SERVICE_VERSION=1.0.0

# Logging Configuration
LOG_LEVEL=info

# NATS JetStream Configuration
NATS_URL=nats://localhost:4222
NATS_CONNECTION_NAME=aos-backend
NATS_TELEMETRY_SUBJECT_PREFIX=telemetry
NATS_TELEMETRY_STREAM_PREFIX=AOS_TELEMETRY
NATS_TELEMETRY_MAX_MESSAGES=1000

# Log Service
INTERNAL_LOG_TOKEN=dev-admin-token
AOS_INTERNAL_TOKEN=dev-admin-token
AOS_INTERNAL_ROLE=owner
AOS_INTERNAL_LABEL=system
LOG_SERVICE_URL=http://localhost:3001/api/logs

# Sandbox Scripts
SANDBOX_SCRIPTS_DIR=./hand-runtime/scripts

# Auth
# 将该值设为 false 可在开发环境开启严格认证
AOS_AUTH_DEV_BYPASS=true

# RBAC Tokens
# JSON: {"token": "role"} or array [{"token":"...","role":"admin"}]
AOS_API_TOKENS={"dev-admin-token":"owner"}
